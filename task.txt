x Criar projeto react e configurar
    x Tawildin css

x Criar um componente de input
    x Ele espera receber uma prop que é uma string, que é a label que irá na parte superior da string
    x O input será um pouco arredondado

x Criar um componente de botão
    x Ele espera receber uma prop que é uma string, que é a label que ficará no botão
    x Ver uma estilização para o botão

x Criar uma API com um endpoint ficticio
    X Usando c# criar a estrutura de uma API, sem a conexão com nenhum banco de dados, só para criar um endpoint até um controller
        X controller (login)
            x Verifica se o que foi recebido no body se o e-mail é igual a admin@admin.com e a senha é igual a 123456
                x Se sim retorna status 200
                x Se não retorna "Usuário ou senha inválidos" com status 401

x Ajeitar as Routes

x Tela de login estilizada com tawildin (https://chatgpt.com/c/682c7cea-b66c-8010-b4f8-1ba595d83b69)
    x Terá 2 campos de escrever, um será de e-mail e o outro de senha
    x Botão de entrar com o componente de botão
        x Ao clicar no botão de entrar 
            x Deve ser feito uma requisição chamando o endpoint de login da API criada (preciso pegar os valores dos inputs)
                x Se retorna 200 ele só vai para a tela de dashboard (add o redirecionamento para a tela de dashboard)
                x Se retorna 401, exibi a mensagem e não vai para a tela de dashboard

x Pág dashboard estilizada com tawildin
    X Texto no meio escrito "Bem-vindo, admin!"
    X Abaixo botão de Sair com o componente de botão
        x Quando clica redireciona para a tela de login
    x Incluir esse componente de pag no arquivo de route

X Testes
    x Unitarios (Jest)
        x Testar se ao pegar o inputComponent e passar o nome do label se ele renderiza essa label

        x Testar se ao pegar o buttonComponent e passar o nome da label se ele renderiza essa label

    x E2E (Cypress)
        x Fluxo login
            x Login certo usando "admin@admin.com" e "123456"
                x Preciso que o campo de e-mail seja preenchido com "admin@admin.com"
                x Preciso que o campo de senha seja preenchido com "123456"
                x Clicar no botão entrar
                    x Usar o intercept para simular a requisição retornando o status 200
                x Após o retorno ele tem que verificar se está na tela de dashboard

            x Login errado sem "admin@admin.com" e "123456"
                x Preciso que o campo de e-mail seja preenchido com "user@admin.com"
                x Preciso que o campo de senha seja preenchido com "1234"
                x Clicar no botão entrar
                    x Usar o intercept para simular a requisição retornando o status 401 e a mensagem "Usuário ou senha inválidos"
                x Ver se "Usuário ou senha inválidos" é exibido na tela

            x Testar API Login errado sem "admin@admin.com" e "123456"
                x Preciso de um array de objetos contendo os campos e-mail e password
                    x email: "admin@admin.com" e senha "12345"
                    x email: "user@admin.com" e senha "123456"
                    x email: "user@admin.com" e senha "12345"
                x Gero um loop usando esse array onde  
                    x Faço o .request() para o endpoint de login enviando os dados de e-mail e password
                        x O retorno em todos tem que ter o status 401 e a mensagem "Usuário ou senha inválidos"

            x Testar API Login certo com "admin@admin.com" e "123456"
                x Faço o .request() para o endpoint de login enviando os dados "admin@admin.com" e "123456" no body
                    x O retorno tem que ser um status 200

            x Testar fluxo de logout indo para a tela de login
                x Pego o botão Sair
                x Clico nele
                x Verifico se a tela que estou é a de login tem que ser a de login
